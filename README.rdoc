= Database Constraints

Because adding database constraints should be easy.

Available constraints:

* Email: Validates format of email
* Login: Validates uniqueness of login names
* Positive: Validates positiveness of a number
* Length: Validates length of a value
* Uniqueness

<b>Note:</b> Only works on PostgreSQL. This is an initial work. And I've planned
to add the common Rails validations +validates_format_of+, +validates_inclusion_of+, 
+validates_lenght_of+, +validates_numericality_of+, +validates_size_of+, 
+validates_uniqueness_of+.

== Example

    class AddConstraintsToModels < ActiveRecord::Migration

      def self.up
        add_email_check :users, :email
        add_login_check :users, :login
        add_positive_check :products, :price
        add_length_check :users, :login, :is => 8
        add_uniqueness_check :user, :login
      end

      def self.down
        remove_email_check :users, :email
        remove_login_check :users, :login
        remove_positive_check :users, :price
        remove_length_check :users, :login, :is => 8
        remove_uniqueness_check :user, :login
      end

    end

== How to test?

Create a PostgreSQL database named <tt>database_constraints</tt> and run 
<tt>rake</tt>.

Copyright (c) 2008-2009 Francesc Esplugas Marti, released under the MIT 
license